{
  "name": "@mmisty/cypress-grep",
  "version": "0.0.0",
  "description": "Filters tests by tags/title using substring or regular expressions (can find dynamic tags)",
  "main": "index.js",
  "repository": "git@github.com:mmisty/cypress-grep.git",
  "homepage": "https://github.com/mmisty/cypress-grep#readme",
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "bin": {
    "cy-grep": "bin/cy-grep.js"
  },
  "keywords": [
    "cypress",
    "e2e",
    "tests",
    "typescript",
    "template",
    "grep",
    "select",
    "filter"
  ],
  "license": "Apache-2.0",
  "author": "Taisia Pitko (mmisty) <minydas@yandex.ru>",
  "scripts": {
    "husky:install": "husky install",
    "lint": "eslint --fix '**/*.{ts,tsx,js}'",
    "test": "jest --reporters=default --reporters=jest-junit",
    "test:cov:int": "CI=true jest --testPathPattern=\"tests/test-folder/integration\" --coverage --runInBand --coverageDirectory reports/coverage-jest --reporters=default --reporters=jest-junit",
    "test:cov": "CI=true jest --testPathIgnorePatterns=\"tests/test-folder/integration\" --coverage --runInBand --coverageDirectory reports/coverage-jest --reporters=default --reporters=jest-junit",
    "cy:open": "npx cypress open --browser chrome --e2e",
    "cy:run:grep": "node src/bin/cy-grep.js --script 'npm run cy:run' --p './reports/filtered.json'",
    "cy:open:all": "npm run cy:open -- --browser chrome --config specPattern='integration/**/all-tests.js'",
    "cy:run": "npx cypress run --browser chrome --headless",
    "cy:run:regress": "npm run cy:run -- --config specPattern='integration/e2e/regression/**/*.ts'",
    "cy:run:grep:cov": "CYPRESS_COVERAGE=true COVERAGE_REPORT_DIR=reports/coverage-cypress npm run cy:run:grep",
    "cy:grep:regress": "node src/bin/cy-grep.js --script 'npm run cy:run:regress'",
    "cy:run:1": "CYPRESS_GREP_showTagsInTitle=true npm run cy:run:grep:cov",
    "cy:run:2": "CYPRESS_GREP_showTagsInTitle=false npm run cy:run:grep:cov",
    "cy:run:3": "CYPRESS_INTER=true npm run cy:run:grep:cov -- -- --script 'npm run cy:run -- --config specPattern=\"integration/e2e/**/*.cy.ts\"' ",
    "cy:run:4": "CYPRESS_GREP='@cyApi&!@navbar' CYPRESS_GREP_showTagsInTitle=true npm run cy:run:grep:cov",
    "cy:run:4.1": "CYPRESS_GREP='@cyApi&' npm run cy:run:grep:cov",
    "cy:run:4.2": "CYPRESS_GREP='@navbar' npm run cy:run:grep:cov",
    "cy:run:4.3": "CYPRESS_GREP='@navbar' npm run cy:run:grep:cov",
    "cy:run:parallel": "npm run cy:run:4.1 & npm run cy:run:4.2 & npm run cy:run:4.3",
    "cy:run:5": "CYPRESS_GREP='@cyApi&!@navbar' CYPRESS_GREP_showTagsInTitle=false npm run cy:run:grep:cov",
    "cy:run:6": "CYPRESS_GREP='@cyApi&!@navbar' CYPRESS_GREP_showTagsInTitle=false CYPRESS_GREP_showExcludedTests=false npm run cy:run:grep:cov",
    "cy:run:7": "CYPRESS_GREP_TESTS_FOLDER='integration/e2e' CYPRESS_GREP='@navbar' CYPRESS_GREP_showTagsInTitle=false npm run cy:run:grep:cov",
    "cy:run:8": "CYPRESS_GREP_TESTS_FOLDER='integration/e2e' CYPRESS_GREP='@notExisting' npm run cy:run:grep:cov || true",
    "cy:run:9": "npm run cy:run:grep:cov -- -- --f",
    "cy:run:cov": "npm run cy:run:1 && npm run cy:run:2 && npm run cy:run:3 && npm run cy:run:4 && npm run cy:run:5 && npm run cy:run:6&& npm run cy:run:7&& npm run cy:run:8&& npm run cy:run:9 && npm run cy:run:parallel",
    "cy:open:cov": "COVERAGE_REPORT_DIR=reports/coverage-cypress COVERAGE=true npm run cy:open",
    "build": "rm -rf lib && tsc --project tsconfig.build.json",
    "build:tests": "tsc && cd tests && tsc",
    "build:cy": "cd integration && tsc",
    "build:all": "npm run build && npm run build:cy && npm run build:tests",
    "test:all": "rm -rf filtered_test_paths.json && npm run test:cov && npm run cy:run:cov",
    "cov:merge": "node ./.scripts/merge.js --cypress reports/coverage-cypress  --jest reports/coverage-jest --out reports/coverage-temp --report reports/coverage-2",
    "cov:merge:fin": "node ./.scripts/merge.js --cypress reports/coverage-2  --jest reports/coverage-jest --out reports/coverage-temp --report reports/coverage-full && npm run cov:fin",
    "cov": "http-server reports/coverage-full/lcov-report",
    "cov:jest": "http-server reports/coverage-jest/lcov-report",
    "cov:cy": "http-server reports/coverage-cypress/lcov-report",
    "cov:check": "COVERAGE_TEMP=reports/coverage-temp nyc check-coverage",
    "cov:show": "COVERAGE_TEMP=reports/coverage-temp nyc report --reporter=text",
    "cov:fin": "npx nyc report -t reports/coverage-full --report-dir reports/coverage-full-total",
    "all": "npm run pre && npm run cov:check && npm run cov",
    "pre": "rm -rf ./node_modules/.cache lib reports coverage-nyc .nyc_output  && npm run lint && npm run build:all && npm run test:all && npm run cov:merge",
    "try:pack": "npm run prepublishOnly && npm pack && npm run postpublish",
    "pack": "npm run build && cp package.json ./lib/package.json && cp README.pack.md ./lib/README.md && cp CHANGELOG.md ./lib/CHANGELOG.md && sh .scripts/remove.sh && cd lib && npm version $ver --no-git-tag-version ",
    "publishPack": "npm run pack && cd lib && npm publish --tag $TAG",
    "publish:alpha": "export TAG=alpha && export ver=$(semver $(npm show . version) --increment -i prerelease  --preid 'alpha') && npm run publishPack && npm run postpublish",
    "publish:patch": "export TAG=latest && export ver=$(semver $(npm show . version) --increment -i patch) && npm run publishPack && npm run postpublish",
    "publish:minor": "export TAG=latest && export ver=$(semver $(npm show . version) --increment -i minor) && npm run publishPack && npm run postpublish",
    "publish:major": "export TAG=latest && export ver=$(semver $(npm show . version) --increment -i major) && npm run publishPack && npm run postpublish",
    "publish:pack": "export TAG=latest && export ver=\"0.0.2-alpha-2\" && npm run publishPack && npm run postpublish",
    "postpublish": "git tag v$ver",
    "fmt": "pretty-quick"
  },
  "jest-junit": {
    "suiteName": "jest tests",
    "outputDirectory": "./reports/jest",
    "outputName": "junit.xml",
    "uniqueOutputName": "false",
    "classNameTemplate": "{classname}-{title}",
    "titleTemplate": "{classname}-{title}",
    "ancestorSeparator": " â€º ",
    "usePathForSuiteName": "true"
  },
  "devDependencies": {
    "@cypress/code-coverage": "^3.12.39",
    "@ephesoft/webpack.istanbul.loader": "^2.2.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@mmisty/cypress-allure-adapter": "^0.16.8",
    "@types/jest": "^29.2.3",
    "@types/mocha": "^9.0.0",
    "@types/node": "^18.11.9",
    "@typescript-eslint/eslint-plugin": "^5.44.0",
    "@typescript-eslint/parser": "^5.44.0",
    "allure-js-parser": "^0.0.7",
    "cypress": "^13.11.0",
    "cypress-redirect-browser-log": "^1.3.0",
    "eslint": "^8.28.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-jest": "^27.1.6",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.1.1",
    "husky": "^8.0.2",
    "istanbul-lib-coverage": "^3.2.0",
    "jest": "^29.3.1",
    "jest-environment-jsdom": "^29.3.1",
    "jest-junit": "^16.0.0",
    "jest-test-each": "^0.9.1",
    "nyc": "^15.1.0",
    "pretty-quick": "^3.1.3",
    "ts-jest": "^29.0.3",
    "ts-loader": "^9.4.1",
    "ts-node": "^10.9.1",
    "tsconfig-paths-webpack-plugin": "^4.0.0",
    "typescript": "^4.9.3",
    "webpack": "^5.88.2"
  },
  "overrides": {
    "loader-utils": "1.4.2"
  },
  "dependencies": {
    "@mmisty/cypress-tags": "^1.0.15",
    "cypress-controls-ext": "^0.2.0",
    "fast-glob": "^3.3.1",
    "yargs": "^17.7.2"
  },
  "engines": {
    "node": ">=16",
    "npm": ">=8"
  },
  "volta": {
    "node": "18.12.0",
    "npm": "8.19.2"
  }
}
